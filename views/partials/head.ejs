<title>Work Orbit</title>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/style.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="/script.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCLhw12hTzbrWIAIepH3EoDvKGs1WhetTQ"></script>
<script type="text/javascript" src="https://apicdn.walkscore.com/api/v1/traveltime_widget/js?wsid=3950dacfe4b9f83564d394cab5e9fb88"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="//cdn.jsdelivr.net/rsvp/3.0.6/rsvp.js"></script>

<script type="text/javascript">
			'use strict';

			// Initialize the global map //
			var time; var address; var mode;
			
			var map; var homeMarker; var workMarker;
		
//			var neighborhoodStyles;
			
			var prontoMarkers = [];
			
			var prontoIcon =  {
				url : 'https://s3.amazonaws.com/geohackers-for-good/pronto_logo_hexa_hosted.svg',
				scaledSize: new google.maps.Size(30,30),
				origin: new google.maps.Point(0,0),
				anchor: new google.maps.Point(15, 15)
			};
			
//			var infoWindow = new google.maps.InfoWindow( { size: new google.maps.Size(100,50) } );
			
			var geocoder     = new google.maps.Geocoder();
			var geocoder_re  = null;

			// DirectionService //
			var directionsService = new google.maps.DirectionsService();
			var directionsDisplay = new google.maps.DirectionsRenderer();
		
			// Home to Work //
				// Consider origin/dest 
			var home = {};
/*			var work = { 
							latLng : new google.maps.LatLng(47.6222788,-122.336828599), 
							address: '1100 2nd Ave #500, Seattle, WA 98101'
						}; 
*/

			var work_location; var work_lat; var work_lng; var work_location_str;
			
			var mode_map; var widget;
			
			var ltlng = null;
			
			// Here are the Pronto neighborhoods //
			
			var pronto_available_neighborhoods =
				[	'Westlake',
					'Laurelhurst',
					'Ravenna',
					'Bryant',
					'Portage Bay',
					'Montlake',
					'Broadway',
					'First Hill',
					'Yesler Terrace',
					'Pioneer Square',
					'International District', 
					'Belltown', 	
					'Eastlake',
					'South Lake Union',
					'Lower Queen Anne',
					'East Queen Anne',
					'Central Business District'
				];
			

			function initialize() {
			
				time = Number.parseInt(document.URL.split('/')[4]);
				mode = document.URL.split('/')[5];			
			
				address = document.URL.split('/')[6];
				address = address.replace(/%20/g,' ');

				console.log(address);
								
				var promiseGeocode = new RSVP.Promise(function (resolve, reject) {
					var geocoder = new google.maps.Geocoder();
					geocoder.geocode( { 'address': address}, function(results, status) {
						if (status == google.maps.GeocoderStatus.OK) {							
							work_location     = results[0].geometry.location;
							work_lat          = work_location.k;
							work_lng          = work_location.D;
							work_location_str = work_lat + ',' + work_lng;
							resolve(work_location);
							console.log('Successful resolution :D ', work_location_str);							
						} else {
							work_location     = new maps.google.latLng(47.6222788, -122.336828599);
							work_lat          = 47.6222788;
							work_lng          = -122.336828599;
							work_location_str = work_lat + ',' + work_lng;
							resolve(work_location);
							console.log('Unable to find the location!!!');
							resolve(work_location);
						}
					});	
				});
			
					
				promiseGeocode.then( function(work_location) {

					console.log('The promise is passed');
					
					var mapCanvas  = document.getElementById('map-canvas');
					
					var mapOptions = {
										mapTypeId : google.maps.MapTypeId.ROADMAP,
										center    : new google.maps.LatLng(work_lat , work_lng),
										zoom      : 13
									 };

					// This creates the actual map object and attaches it to the HTML object //
					map = new google.maps.Map( mapCanvas, mapOptions );
					console.log('the map is created');
					
					
					////////////////////////////////////////////////////////
					
					
					var neighborhoodStyles = {
						fillColor     : 'green',
						fillOpacity   : 0.7,
						strokeColor   : 'blue',
						strokeOpacity : 0.6,
						strokeWeight  : 8
					};
					
					/////////////////// Load the Data ! ///////////////////
					
					// Loads the big, neighborhood data-JSON //

					// Sorted by neighborhood name 
						// Make "type":"Neighborhood"
						// Make this have a callback for the infoWindow //							
					map.data.loadGeoJson('https://s3.amazonaws.com/work-orbit/all_Seattle_data_test.geojson', {idPropertyName:"name"},
						function (polys) {   // Set the neighborhood styling //
							polys.forEach( 
								function(poly){
									// Add the styling //
									map.data.overrideStyle(poly, neighborhoodStyles);
								}
							);
						}
					);
						
					// Sorted by "type":"Pronto"
						// Toggle Pronto Icons //
					var prontoIcon =  {
						url : 'https://s3.amazonaws.com/geohackers-for-good/pronto_logo_hexa_hosted.svg',
						scaledSize: new google.maps.Size(30,30),
						origin: new google.maps.Point(0,0),
						anchor: new google.maps.Point(15, 15)
					};

					var prontoStyles = { 
						icon: prontoIcon,
						visible: false,
						clickable: true 
					}; // Set title to the station.address 
						
					map.data.loadGeoJson('https://s3.amazonaws.com/work-orbit/formatted_pronto_locations_aug.geojson', {idPropertyName:"name"},
						function (pronto_points) 
						{
							pronto_points.forEach( 
								function(pronto_point){
									map.data.overrideStyle(pronto_point, prontoStyles);
								}
							);
						}
					);	

					/////////////////// Add the widget /////////////////////
					
					// Styling the Data //
					mode_map = {
						'car': walkscore.TravelTime.Mode.DRIVE,
						'walk': walkscore.TravelTime.Mode.WALK,
						'bike': walkscore.TravelTime.Mode.BIKE,
						'bus': walkscore.TravelTime.Mode.TRANSIT
					};

					widget = new walkscore.TravelTimeWidget(
					{
						color:'#00000000',
						map: map,
						origin: work_location_str,
						show: true,
						mode: mode_map['car'],
						time: time,	
						congestion: true
					});
														 
				});
			}

// This calls the initialize() function (above) after the page loads //
google.maps.event.addDomListener(window, 'load', initialize);
</script>
